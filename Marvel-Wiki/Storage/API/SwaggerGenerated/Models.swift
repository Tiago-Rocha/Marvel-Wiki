// Models.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation

protocol JSONEncodable {
    func encodeToJSON() -> Any
}

public struct ErrorResponse: Error {
    
    /// -1 Server response is empty
    /// -2 Decoding Error
    public var errorCode: Int?
    
    public var error: Error?
    
    public var body: Data?
    
    public init(_ errorCode: Int?, _ body: Data?, _ error: Error?) {
        
        self.errorCode = errorCode
        self.body = body
        self.error = error
    }
}

open class Response<T> {
    
    public let statusCode: Int
    
    public let header: [String: String]
    
    public let body: T?
    
    public init(statusCode: Int, header: [String: String], body: T?) {
        self.statusCode = statusCode
        self.header = header
        self.body = body
    }
    
    public convenience init(response: HTTPURLResponse, body: T?) {
        let rawHeader = response.allHeaderFields
        var header = [String:String]()
        for case let (key, value) as (String, String) in rawHeader {
            header[key] = value
        }
        self.init(statusCode: response.statusCode, header: header, body: body)
    }
}
